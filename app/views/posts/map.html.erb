<script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?clientId=ivA9nhaH8kOSjRAgsF2K&submodules=geocoder"></script>

<div id="map" style="width:100%;height:600px;"></div>

<script>
var mapOptions = {
  scaleControl: false,
  logoControl: false,
  mapDataControl: false,
  zoomControl: true,
  zoomControlOptions: {
    position: N.Position.RIGHT_CENTER
  }

};
var map = new N.Map('map', mapOptions); // N = naver.maps 의 축약형
var jeju = new N.LatLng(33.3590628, 126.534361);
var naver_address = new N.LatLng(37.3595704, 127.105399);
var cityhall = new naver.maps.LatLng(37.5666805, 126.9784147);
var data;
var markers = [];
var infoWindows = [];
var indices = [];

map.setCenter(cityhall); // 중심 좌표 이동
map.setZoom(13);     // 줌 레벨 변경

getData();

function getData() {
  var bounds = map.getBounds();
  var max = bounds._max;
  var min = bounds._min;
  $.ajax({
    url: '/map_data',
    type: 'POST',
    dataType: 'Json',
    data: {max:JSON.stringify(max),
           min:JSON.stringify(min), // string 형식으로 받아야 함.
           authenticity_token: $('[name="csrf=token"]').attr('content'),
           indices: JSON.stringify(indices)},
      success: function(result) {
      data = result[0]; // 새로 로딩된 학교들의 data. 즉 기존에는 없던 학교들만 있음.
      indices = indices.concat(result[1]); // 새로 로딩된 학교들의 id
      alert("success");
      console.log(data);
      createElements();
    }
  });
}

// var data = [
//   {name: "아리차이", address: "서울특별시 관악구 신림동길 4", link: "https://store.naver.com/restaurants/detail?id=11704746", x: 126.9282765, y: 37.4876462},
//   {name: "한우등촌골", address: "서울특별시 강서구 등촌로 201", link: "https://store.naver.com/restaurants/detail?id=35966485", x:126.86273, y: 37.5476847},
//   {name: "수유부추곱창", address: "서울특별시 강북구 도봉로87길 26-21", link: "https://store.naver.com/restaurants/detail?id=37111836", x: 127.0247721, y: 37.6393168},
//   {name: "강천민물장어", address:"서울특별시 강동구 올림픽로 834 한강시티라이프", link: "https://store.naver.com/restaurants/detail?id=18905396", x: 127.1297937, y: 37.5553916 }
// ];

function createElements() {
  alert("create!");
  var new_markers = [];
  var new_infoWindows = [];
  for(var i = 0; i < data.length; i++) {
    var school = data[i];

    var marker = new N.Marker({
      position: new N.LatLng(school.lat, school.lng),
      map: map,
      icon: {
        url: 'https://navermaps.github.io/maps.js/docs' +'/img/example/sally.png',
        size: new naver.maps.Size(50, 52), // 이미지 자체 크기가 주는 것이 아니라 짤려버림. 원본 크기가 중요.
        origin: new naver.maps.Point(0, 0), // div는 그대로기 때문에 이미지가 한쪽으로 밀려 잘려버리는 것 처럼 보임.
        anchor: new naver.maps.Point(25, 26) // div 자체가 이동. anchor에 size의
      }
      // animation: 1 // 1은 계속 방방 뛰고 2는 처음 등장할때 쿵 내리 찍
    });

    var contentString = [
    '<div class="iw_inner">',
    '<h3>'+school.name+'</h3>',
    '<p>'+school.address+'</p>',
    '<a href= "http://www.naver.com">알아보기</a>'
    ].join('');

    var infowindow = new N.InfoWindow({
        content: contentString
    });
    new_markers.push(marker);
    new_infoWindows.push(infowindow);

    markers.push(marker);
    infoWindows.push(infowindow);
  }
  addEvents(new_markers, new_infoWindows);
}


function getClickHandler(seq) {
  return function(e) {
      var marker = new_markers[seq],
          infoWindow = new_infoWindows[seq];

      if (infoWindow.getMap()) { //정보가 맵에 표시되어 있는지
          infoWindow.close();
      } else {
          infoWindow.open(map, marker);
      }
  }
}

function addEvents(new_markers, new_infoWindows){
  alert("event!");
  for (var i=0, ii=new_markers.length; i<ii; i++) {
    N.Event.addListener(new_markers[i], 'click', getClickHandler(new_markers, new_infoWindows));
  }
  updateMarkers(map, markers);
}
//보이는 영역에만 마커 표시하기
naver.maps.Event.addListener(map, 'idle', function() { //idle : 지도의 움직임이 종료되었을 때(유휴 상태.) 이벤트가 발생.
  getData();
});

function updateMarkers(map, markers) {

    var mapBounds = map.getBounds(); // MAP의 왼쪽 하단의 좌표와 오른쪽 상단의 좌표 반환 (둘레 반환)

    var marker, position;

    // 마커들의 좌표를 확인한 다음에 둘레안에 있으면 표시, 없으면 숨김.
    for (var i = 0; i < markers.length; i++) {

        marker = markers[i]
        position = marker.getPosition();

        if (mapBounds.hasLatLng(position)) {
            showMarker(map, marker);
        } else {
            hideMarker(map, marker);
        }
    }
}

function showMarker(map, marker) {

    if (marker.getMap()) return;
    marker.setMap(map);
}

function hideMarker(map, marker) {

    if (!marker.getMap()) return;
    marker.setMap(null);
}

// ==================================================================================
//
//
//
//
// var marker = new N.Marker({
//     position: new N.LatLng(37.3595704, 127.105399),
//     map: map
// });
//
// var marker2 = new N.Marker({
//     position: cityhall,
//     map: map
// });
//
// var marker2 = new N.Marker({
//     position: jeju,
//     map: map
// });
//
// var markers = [marker, marker2, marker3];
// // 아래 getClickHandler function 위해
//
// var contentString = [
//     '<div class="iw_inner">',
//     '   <h3>서울특별시청</h3>',
//     '   <p>서울특별시 중구 태평로1가 31 | 서울특별시 중구 세종대로 110 서울특별시청<br>',
//     '       <img src="./img/hi-seoul.jpg" width="55" height="55" alt="서울시청" class="thumb" /><br>',
//     '       02-120 | 공공,사회기관 > 특별,광역시청<br>',
//     '       <a href="http://www.seoul.go.kr" target="_blank">www.seoul.go.kr/</a>',
//     '   </p>',
//     '</div>'
// ].join('');
//
// var contentString2 = [
//     '<div class="iw_inner">',
//     '   <h3>서울특별시청</h3>',
//     '   <p>서울특별시 중구 태평로1가 31 | 서울특별시 중구 세종대로 110 서울특별시청<br>',
//     '       <img src="./img/hi-seoul.jpg" width="55" height="55" alt="서울시청" class="thumb" /><br>',
//     '       02-120 | 공공,사회기관 > 특별,광역시청<br>',
//     '       <a href="http://www.seoul.go.kr" target="_blank">www.seoul.go.kr/</a>',
//     '   </p>',
//     '</div>'
// ].join('');
//
// var contentString3 = [
//     '<div class="iw_inner">',
//     '   <h3>서울특별시청</h3>',
//     '   <p>서울특별시 중구 태평로1가 31 | 서울특별시 중구 세종대로 110 서울특별시청<br>',
//     '       <img src="./img/hi-seoul.jpg" width="55" height="55" alt="서울시청" class="thumb" /><br>',
//     '       02-120 | 공공,사회기관 > 특별,광역시청<br>',
//     '       <a href="http://www.seoul.go.kr" target="_blank">www.seoul.go.kr/</a>',
//     '   </p>',
//     '</div>'
// ].join('');
//
// var infowindow = new naver.maps.InfoWindow({
//     content: contentString
// });
//
// var infowindow2 = new naver.maps.InfoWindow({
//     content: contentString
// });
//
// var infowindow3 = new naver.maps.InfoWindow({
//     content: contentString
// });
//
// var infoWindows = [infowindow, infowindow2, infowindow3];
// // 아래 getClickHandler function 위해, 때문에 infoWindow의 W가 대문자임.
//
// // naver.maps.Event.addListener(marker, "click", function(e) {
// //     if (infowindow.getMap()) { // MAP에 정보창이 열려 있으면 정보창에 관한 정보가 RETURN,열려있지 않으면 NULL을 RETURN..
// //         infowindow.close();
// //     } else {
// //         infowindow.open(map, marker);
// //     }
// // });
// //
// //
// // naver.maps.Event.addListener(marker2, "click", function(e) {
// //     if (infowindow2.getMap()) { // MAP에 정보창이 열려 있으면 정보창에 관한 정보가 RETURN,열려있지 않으면 NULL을 RETURN..
// //         infowindow2.close();
// //     } else {
// //         infowindow2.open(map, marker2);
// //     }
// // });
// //
// // naver.maps.Event.addListener(marker3, "click", function(e) {
// //     if (infowindow3.getMap()) { // MAP에 정보창이 열려 있으면 정보창에 관한 정보가 RETURN,열려있지 않으면 NULL을 RETURN..
// //         infowindow3.close();
// //     } else {
// //         infowindow3.open(map, marker3);
// //     }
// // });
//
// // 아래 getClickHandler function과 for 문은 위에 주석 처리된 3문단(이벤트 핸들러들)을 축약해줌.
// function getClickHandler(seq) {
//     return function(e) {
//         var marker = markers[seq],
//             infoWindow = infoWindows[seq];
//
//         if (infoWindow.getMap()) {
//             infoWindow.close();
//         } else {
//             infoWindow.open(map, marker);
//         }
//     }
// }
//
// for (var i=0, ii=markers.length; i<ii; i++) {
//     naver.maps.Event.addListener(markers[i], 'click', getClickHandler(i));
// }
//
</script>
